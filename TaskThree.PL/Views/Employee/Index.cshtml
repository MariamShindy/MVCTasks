@model IEnumerable<EmployeeViewModel>
@{
	ViewData["Title"] = "Index";
}
@* <div class="alert alert-warning">
	@ViewData["message"]
</div>

<div class="alert alert-danger">
	@ViewBag.message
</div> *@

@if (!string.IsNullOrEmpty(TempData["message"] as string))
{
	<div class="alert alert-success">
		@TempData["message"]
	</div>
}
<h1>All Employees</h1>
<br>
<br>
<a asp-controller="Employee" asp-action="Create" class="btn btn-primary">Create New Employee</a>

<div class="row justify-content-center align-items-center mt-5">
	<form asp-action="Index" class="row col-8 offset-2">
		<div class="col-8">
			<input type="text" class="form-control" name="SearchInp" id="SearchInp" placeholder="Search By Name" />
		</div>
		<div class="col-4">
			<input type="submit" value="search" class="btn btn-success"/>
		</div>
	</form>
</div>
<br />
<br />

@if (Model != null && Model.Any())
{
	<table class="table table-striped table-hover">
		<thead>
			<tr>
				<th>@Html.DisplayNameFor(E => E.Name)</th>
				<th>@Html.DisplayNameFor(E => E.Email)</th>
				<th>@Html.DisplayNameFor(E => E.Salary)</th>
				<th>@Html.DisplayNameFor(E => E.Department)</th>
				<th>@Html.DisplayNameFor(E => E.isActive)</th>
				<th>@Html.DisplayNameFor(E => E.Gender)</th>
				<th>@Html.DisplayNameFor(E => E.Age)</th>
				<th>Details</th>
				<th>Update</th>
				<th>Delete</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var employee in Model)
			{
				<tr>
					<td>@employee.Name</td>
					<td>@Html.DisplayFor(E => employee.Email)</td>
					<td>@Html.DisplayFor(E => employee.Salary)</td>
					<td>@employee.Department?.Name</td>
					<td>@employee.isActive</td>
					<td>@employee.Gender</td>
					<td>@employee.Age</td>
					<partial name="_ButtonsPartial" model="@employee.Id"/>
				</tr>
				}
		</tbody>
	</table>
	}
	else
	{
		<div class="mt-4 alert alert-warning">
			<h3>There is no Employees</h3>
		</div>
	}
